// Generated by view binder compiler. Do not edit!
package com.example.mymusiclibrary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mymusiclibrary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addPhotoButton;

  @NonNull
  public final EditText albumInfo;

  @NonNull
  public final Button backButton;

  @NonNull
  public final Button deleteButton;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final Button saveButton;

  private FragmentDetailBinding(@NonNull ConstraintLayout rootView, @NonNull Button addPhotoButton,
      @NonNull EditText albumInfo, @NonNull Button backButton, @NonNull Button deleteButton,
      @NonNull ImageView imageView, @NonNull LinearLayout linearLayout,
      @NonNull Button saveButton) {
    this.rootView = rootView;
    this.addPhotoButton = addPhotoButton;
    this.albumInfo = albumInfo;
    this.backButton = backButton;
    this.deleteButton = deleteButton;
    this.imageView = imageView;
    this.linearLayout = linearLayout;
    this.saveButton = saveButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addPhotoButton;
      Button addPhotoButton = ViewBindings.findChildViewById(rootView, id);
      if (addPhotoButton == null) {
        break missingId;
      }

      id = R.id.album_info;
      EditText albumInfo = ViewBindings.findChildViewById(rootView, id);
      if (albumInfo == null) {
        break missingId;
      }

      id = R.id.backButton;
      Button backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.deleteButton;
      Button deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      return new FragmentDetailBinding((ConstraintLayout) rootView, addPhotoButton, albumInfo,
          backButton, deleteButton, imageView, linearLayout, saveButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
